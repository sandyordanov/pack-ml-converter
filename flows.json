[{"id":"6794c58242156d5e","type":"tab","label":"OMRON visualization","disabled":false,"info":"","env":[]},{"id":"d506ae5f572831ce","type":"ui_template","z":"6794c58242156d5e","group":"8d8edc2116bb2a3f","name":"Production Stages","order":9,"width":"18","height":"9","format":"<div style=\"display: flex; flex-direction: column; align-items: center;\">\n\n  <!-- Row 1 -->\n  <div style=\"display: flex; align-items: center; justify-content: center; margin-bottom: 40px; margin-left: 50px;\">\n\n    <!-- Stage N120 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(120)\">\n      <div style=\"position: relative; margin-right: 20px;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N120 (Soldering)</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N120'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N120'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N120'].text}}\n        </div>\n\n        <!-- Arrow pointing right -->\n        <div style=\"position: absolute; top: 50%; left: 100%; transform: translateY(-50%); margin-left: 10px;\">\n          <div\n            style=\"border-top: 10px solid transparent; border-bottom: 10px solid transparent; border-left: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Stage N125 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(125)\">\n      <div style=\"position: relative; margin-right: 40px;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N125</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N125'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N125'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N125'].text}}\n        </div>\n\n        <!-- Arrow pointing right -->\n        <div style=\"position: absolute; top: 50%; left: 100%; transform: translateY(-50%); margin-left: 10px;\">\n          <div\n            style=\"border-top: 10px solid transparent; border-bottom: 10px solid transparent; border-left: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Stage N135 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(135)\">\n      <div style=\"position: relative; margin-right: 40px;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N135</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N135'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N135'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N135'].text}}\n        </div>\n\n        <!-- Arrow pointing right -->\n        <div style=\"position: absolute; top: 50%; left: 100%; transform: translateY(-50%); margin-left: 10px;\">\n          <div\n            style=\"border-top: 10px solid transparent; border-bottom: 10px solid transparent; border-left: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Stage N140 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(140)\">\n      <div style=\"position: relative; margin-right: 40px;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N140</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N140'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N140'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N140'].text}}\n        </div>\n\n        <!-- Arrow pointing down -->\n        <div style=\"position: absolute; bottom: -30px; left: 50%; transform: translateX(-50%);\">\n          <div\n            style=\"border-left: 10px solid transparent; border-right: 10px solid transparent; border-top: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Row 2 -->\n  <div style=\"display: flex; align-items: center; justify-content: center; margin-bottom: 40px; margin-left: 0px;\">\n\n    <!-- Stage N115 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(115)\">\n      <div style=\"position: relative; margin-right: 475px;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N115</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N115'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N115'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N115'].text}}\n        </div>\n\n        <!-- Arrow pointing up -->\n        <div style=\"position: absolute; top: -30px; left: 50%; transform: translateX(-50%);\">\n          <div\n            style=\"border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Stage N145 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(145)\">\n      <div style=\"position: relative;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N145</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N145'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N145'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N145'].text}}\n        </div>\n\n        <!-- Arrow pointing down -->\n        <div style=\"position: absolute; bottom: -30px; left: 50%; transform: translateX(-50%);\">\n          <div\n            style=\"border-left: 10px solid transparent; border-right: 10px solid transparent; border-top: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Row 3 -->\n  <div style=\"display: flex; align-items: center; justify-content: center; margin-bottom: 40px; margin-left: 0px;\">\n\n    <!-- Stage N105 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(105)\">\n      <div style=\"position: relative; margin-right: 475px;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N105</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N105'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N105'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N105'].text}}\n        </div>\n\n        <!-- Arrow pointing up -->\n        <div style=\"position: absolute; top: -30px; left: 50%; transform: translateX(-50%);\">\n          <div\n            style=\"border-left: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 20px solid black; height: 0; width: 0;\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Stage N160 -->\n    <div style=\"position: relative; margin-right: 40px;\" ng-click=\"openModal(160)\">\n      <div style=\"position: relative;\">\n        <div style=\"font-size: 16px; margin-bottom: 5px; text-align: center;\">Stage N160</div>\n        <div\n          style=\"height: 75px; width: 120px; background-color: {{msg.payload['N160'].color}}; text-align: center; line-height: 80px; font-size: 20px; color: {{msg.payload['N160'].fontColor}}; border: 2px solid black;\">\n          {{msg.payload['N160'].text}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal for showing details -->\n  <div id=\"myModal\" class=\"modal\" ng-show=\"showModal\">\n    <div class=\"modal-content\">\n      <span class=\"close\" ng-click=\"closeModal()\">&times;</span>\n      <h2>Stage {{selectedStage}}</h2>\n      <p ng-bind-html=\"stageDetails\"></p> <!-- Use ng-bind-html for HTML content -->\n    </div>\n  </div>\n\n\n  <style>\n    /* Modal Style */\n    .modal {\n      display: block;\n      position: fixed;\n      z-index: 1;\n      padding-top: 100px;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.4);\n      /* Black w/ opacity */\n    }\n\n    .modal-content {\n      background-color: white;\n      /* Ensure this is fully opaque */\n      margin: auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 600px;\n      z-index: 2;\n      /* Ensures it is above the modal background */\n    }\n\n\n\n    .close {\n      color: black;\n      /* Changed from white to black */\n      float: right;\n      font-size: 28px;\n      font-weight: bold;\n    }\n\n    .close:hover,\n    .close:focus {\n      color: darkgray;\n      /* Changed hover color to dark gray */\n      text-decoration: none;\n      cursor: pointer;\n    }\n  </style>\n\n  <script>\n    (function(scope) {\n      scope.showModal = false;\n\n      // Handle the click event to open the modal\n      scope.openModal = function(stage) {\n          scope.selectedStage = stage;\n\n          // Fetch timestamp from msg.payload for the selected stage\n          const stageData = scope.msg.payload[\"N\" + stage];\n          if (stageData && stageData.timestamp) {\n              const timestamp = new Date(stageData.timestamp);\n              const minutes = Math.floor((Date.now() - stageData.timestamp) / 60000); // Elapsed time in minutes\n              const seconds = Math.floor(((Date.now() - stageData.timestamp) % 60000) / 1000); // Remaining seconds\n\n              // Update modal content with formatted timestamp\n              scope.stageDetails = \n                  \"Start Time: \" + timestamp.toLocaleTimeString() + \"<br>\" +\n                  \"Elapsed Time: \" + minutes + \" minutes and \" + seconds + \" seconds\";\n          } else {\n              scope.stageDetails = \"No data available for this stage.\";\n          }\n\n          scope.showModal = true;\n          scope.$apply(); // Apply scope changes immediately\n      };\n\n      // Function to close the modal\n      scope.closeModal = function() {\n        scope.showModal = false;\n        scope.$apply();\n      };\n    })(scope);\n  </script>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":970,"y":320,"wires":[[]]},{"id":"d05ed845719ff7bb","type":"function","z":"6794c58242156d5e","name":"Convert to UI","func":"// Initialize boxes state if not already set\nif (!context.get('boxes')) {\n    context.set('boxes', {\n        \"N105\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N115\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N120\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N125\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N135\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N140\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N145\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null },\n        \"N160\": { text: \"IDLE\", color: \"white\", fontColor: \"black\", timestamp: null }\n    });\n}\n\n// Retrieve the initialized boxes array from context\nlet boxes = context.get('boxes');\n\n// Get the incoming payload (e.g., \"N105,EXECUTING\")\nlet payload = msg.payload; // Assuming this is in the format \"stage,status\"\n\n// Split the payload into stage and status\nlet parts = payload.split(',');\nif (parts.length === 2) {\n    let stageName = parts[0]; // Use the stage name directly (e.g., \"N105\")\n    let state = parts[1].toUpperCase(); // Get the status and convert to uppercase\n\n    // Check if the stageName is valid (i.e., it exists in the boxes object)\n    if (boxes.hasOwnProperty(stageName)) {\n        // Update the specific box based on status\n        if (state === \"IDLE\") {\n            boxes[stageName] = {\n                text: \"IDLE\",\n                color: \"white\",\n                fontColor: \"black\",\n                timestamp: null\n            };\n        } else if (state === \"EXECUTING\") {\n            boxes[stageName] = {\n                text: \"EXECUTING\",\n                color: \"green\",\n                fontColor: \"white\",\n                timestamp: new Date().getTime() // Record the current timestamp in milliseconds\n            };\n        } else if (state === \"ABORTED\") {\n            boxes[stageName] = {\n                text: \"ABORTED\",\n                color: \"red\",\n                fontColor: \"white\",\n                timestamp: null\n            };\n        }\n    }\n}\n\n// Do not include `productionStatus` in the boxes\nlet relevantStages = Object.values(boxes);\n\n// Check the overall production line status\nlet productionStatus = { text: \"IDLE\", color: \"white\", fontColor: \"black\" }; // Default to IDLE\n\n// Determine the production status based on the stage statuses\nif (relevantStages.some(stage => stage.text === \"ABORTED\")) {\n    productionStatus = { text: \"ABORTED\", color: \"red\", fontColor: \"white\" };\n} else if (relevantStages.some(stage => stage.text === \"EXECUTING\")) {\n    productionStatus = { text: \"EXECUTING\", color: \"green\", fontColor: \"white\" };\n}\n\n// Assign the updated boxes and production status to the output payload\nmsg.payload = { ...boxes, productionStatus };\n\n// Send the updated message\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":320,"wires":[["d506ae5f572831ce","3f2b8b743f78bc34","6487855d2504808d","110708fdb015dc4a"]]},{"id":"3c1d09d581f84150","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N105,EXECUTING","payloadType":"str","x":490,"y":140,"wires":[["d05ed845719ff7bb"]]},{"id":"a929fd9da17499e6","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N105,IDLE","payloadType":"str","x":460,"y":180,"wires":[["d05ed845719ff7bb"]]},{"id":"220c779adcb18329","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N115,IDLE","payloadType":"str","x":460,"y":260,"wires":[["d05ed845719ff7bb"]]},{"id":"bda60f43af469f4d","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N115,EXECUTING","payloadType":"str","x":490,"y":220,"wires":[["d05ed845719ff7bb"]]},{"id":"de726f67e67efeab","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N120,EXECUTING","payloadType":"str","x":490,"y":300,"wires":[["d05ed845719ff7bb"]]},{"id":"52723d6012f5b0cb","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N125,EXECUTING","payloadType":"str","x":490,"y":380,"wires":[["d05ed845719ff7bb"]]},{"id":"8b6758b0ec991b90","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N135,EXECUTING","payloadType":"str","x":490,"y":460,"wires":[["d05ed845719ff7bb"]]},{"id":"63dcd11123e68062","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N140,EXECUTING","payloadType":"str","x":490,"y":540,"wires":[["d05ed845719ff7bb"]]},{"id":"ba5710864e1f12b5","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N145,EXECUTING","payloadType":"str","x":490,"y":620,"wires":[["d05ed845719ff7bb"]]},{"id":"eb3909ba7cd71930","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N160,EXECUTING","payloadType":"str","x":490,"y":700,"wires":[["d05ed845719ff7bb"]]},{"id":"f3b5ace70325bd57","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N120,IDLE","payloadType":"str","x":460,"y":340,"wires":[["d05ed845719ff7bb"]]},{"id":"58493d64006d638e","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N125,IDLE","payloadType":"str","x":460,"y":420,"wires":[["d05ed845719ff7bb"]]},{"id":"58537490d7d03b11","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N135,IDLE","payloadType":"str","x":460,"y":500,"wires":[["d05ed845719ff7bb"]]},{"id":"104c1c2f4bbde4c1","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N140,IDLE","payloadType":"str","x":460,"y":580,"wires":[["d05ed845719ff7bb"]]},{"id":"cd75de20d29bf086","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N145,IDLE","payloadType":"str","x":462.1999969482422,"y":658.2000122070312,"wires":[["d05ed845719ff7bb"]]},{"id":"ac1444514b2a59c3","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N160,IDLE","payloadType":"str","x":460,"y":740,"wires":[["d05ed845719ff7bb"]]},{"id":"0614ca783659fb25","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"N105,ABORTED","payloadType":"str","x":480,"y":100,"wires":[["d05ed845719ff7bb"]]},{"id":"3f2b8b743f78bc34","type":"ui_template","z":"6794c58242156d5e","group":"8d8edc2116bb2a3f","name":"Production Line","order":10,"width":"10","height":"10","format":"<div style=\"font-size: 20px; margin-bottom: 5px; text-align: center;\">\n    <strong>Production Line Status</strong>\n</div>\n\n<!-- Production Status Box with ng-click to open the modal -->\n<div style=\"position: relative; margin-right: 40px;\">\n    <div style=\"height: 100px; width: 500px; background-color: {{msg.payload['productionStatus'].color}}; \n        text-align: center; line-height: 100px; font-size: 20px; color: {{msg.payload['productionStatus'].fontColor}}; \n        border: 2px solid black; cursor: pointer;\" ng-click=\"openModal()\">\n        {{msg.payload['productionStatus'].text}}\n    </div>\n</div>\n\n<!-- Bottom Section for Additional Text -->\n<div style=\"margin-top: 20px; text-align: center;\">\n    <h3>Production Line Details</h3>\n    <p ng-bind=\"overallStatus.message\"></p>\n    <p ng-bind=\"overallStatus.details\"></p>\n</div>\n\n<!-- Modal for showing details -->\n<div id=\"myModal\" class=\"modal\" ng-show=\"showModal\">\n    <div class=\"modal-content\">\n        <span class=\"close\" ng-click=\"closeModal()\">&times;</span>\n        <h2>Production Line</h2>\n        <p ng-bind-html=\"stageDetails\"></p>\n    </div>\n</div>\n\n<style>\n    /* Modal Style */\n    .modal {\n        display: block;\n        position: fixed;\n        z-index: 1;\n        padding-top: 100px;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    .modal-content {\n        background-color: white;\n        margin: auto;\n        padding: 20px;\n        border: 1px solid #888;\n        width: 80%;\n        max-width: 600px;\n        z-index: 2;\n    }\n\n    .close {\n        color: black;\n        float: right;\n        font-size: 28px;\n        font-weight: bold;\n    }\n\n    .close:hover,\n    .close:focus {\n        color: darkgray;\n        text-decoration: none;\n        cursor: pointer;\n    }\n</style>\n\n<script>\n    (function(scope) {\n    // Initialize modal state\n    scope.showModal = false;\n\n    // Function to open the modal\n    scope.openModal = function() {\n        scope.stageDetails = \"Details for the production line status: \" + scope.msg.payload.productionStatus.text;\n        scope.showModal = true;\n    };\n\n    // Function to close the modal\n    scope.closeModal = function() {\n        scope.showModal = false;\n    };\n\n    // Function to update overall status based on msg.payload\n    scope.updateOverallStatus = function() {\n        const statusText = scope.msg.payload.productionStatus.text; // Updated reference\n\n        // Setting overall status message and details\n        if (statusText === \"IDLE\") {\n            scope.overallStatus = {\n                message: \"Production Line is Idle\",\n                details: \"Some stages are not currently active.\"\n            };\n        } else if (statusText === \"EXECUTING\") {\n            scope.overallStatus = {\n                message: \"Production Line is Running\",\n                details: \"Stage(s) currently executing.\"\n            };\n        } else if (statusText === \"ABORTED\") {\n            scope.overallStatus = {\n                message: \"Production Line has an error\",\n                details: \"Stage(s) currently aborted.\"\n            };\n        } else {\n            scope.overallStatus = {\n                message: \"Production Line status is unknown\",\n                details: \"Please check the system.\"\n            };\n        }\n    };\n\n    // Watch for changes in the msg payload\n    scope.$watch('msg.payload', function(newVal) {\n        if (newVal) {\n            scope.updateOverallStatus();\n        }\n    });\n})(scope);\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":960,"y":380,"wires":[[]]},{"id":"38b8f5ca844a1d46","type":"file in","z":"6794c58242156d5e","name":"","filename":"","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":280,"y":40,"wires":[["61f98486d003b0df"]]},{"id":"1133fb356a60b52e","type":"inject","z":"6794c58242156d5e","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":40,"wires":[[]]},{"id":"61f98486d003b0df","type":"function","z":"6794c58242156d5e","name":"Read last CSV row","func":"let rows = msg.payload.split('\\n'); // Split file by newline\nlet latestRow = rows[rows.length - 2]; // Get second to last row (latest data)\n\n// Split the latest row by commas (assuming CSV is comma-separated)\nlet columns = latestRow.split(',');\n\n// Assuming your CSV columns are ID, STAGE, STATUS, STATE, TIMESTAMP\nmsg.payload = {\n    stage: columns[1],\n    state: columns[2]\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":40,"wires":[["d05ed845719ff7bb"]]},{"id":"6487855d2504808d","type":"debug","z":"6794c58242156d5e","name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":940,"y":240,"wires":[]},{"id":"110708fdb015dc4a","type":"ui_text","z":"6794c58242156d5e","group":"1717cf30535806f7","order":1,"width":"4","height":"4","name":"","label":"","format":"{{msg.payload}}","layout":"row-left","className":"","style":false,"font":"","fontSize":16,"color":"#000000","x":930,"y":440,"wires":[]},{"id":"8d8edc2116bb2a3f","type":"ui_group","name":"PackML States","tab":"6260421915814bca","order":1,"disp":true,"width":"32","collapse":false,"className":""},{"id":"1717cf30535806f7","type":"ui_group","name":"Engine Messages","tab":"74dfbbfcbffe1fc2","order":1,"disp":true,"width":"10","collapse":false,"className":""},{"id":"6260421915814bca","type":"ui_tab","name":"Home","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"74dfbbfcbffe1fc2","type":"ui_tab","name":"Logs","icon":"dashboard","order":3,"disabled":false,"hidden":false}]